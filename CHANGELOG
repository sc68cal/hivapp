Changed in: helix.hiv.views:

	Starting to outgrow the generic views:
	** AttributeError at /visit/edit/10/
	** Cannot set values on a ManyToManyField which
	** specifies an intermediary model.
	** Use DrugUsed's Manager instead.
	** http://stackoverflow.com/questions/387686

	For objects with ManyToMany fields, we have to be a big boy and
	write our own code that puts together these relationships. Since the code
	only has a special case for update/create (which is determined by the model
	instance id being null or a value) we can handle that in the VisitForm class.
	Plus, it makes the view code simpler.

	Race dialog overwrites the race from the database since it
	is not part of the CHOICES tuple in the form. Added options to
	form and cleaned up values in the database. Will require
	database sync from development => production. Doing a query like
	SELECT DISTINCT(race) FROM patient was considered to populate the
	select widget, but the query would be awful expensive and have minimal
	benefit.

	Developing Case Report Form as a subclass of WizardForm.



Changed in: helix.hiv.models:

	Placed docstrings in correct location for all classes.

	Changed "Name" to "Patient ID" to fit Drexel nomenclature.
	Production database will need to be updated to reflect table column rename

	Removed id from all model instances because it was overloading the id
	field from the inherited model class, and would foul up the save() method.
	You'd never get a pk back when save() was called.

Changed in: helix.templates:

	Added template for FormWizard.
